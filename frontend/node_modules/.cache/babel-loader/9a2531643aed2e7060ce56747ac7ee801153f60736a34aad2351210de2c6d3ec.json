{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhans\\\\finalMGOV\\\\src\\\\context\\\\LanguageContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { translations } from '../translations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('ru');\n  const changeLanguage = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  const t = translations[language];\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      changeLanguage,\n      t\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageProvider, \"G9nNCl/uT2f9E1p1RJGdbk0K1NE=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","translations","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","changeLanguage","newLanguage","t","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/zhans/finalMGOV/src/context/LanguageContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { translations } from '../translations';\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('ru');\n\n  const changeLanguage = (newLanguage) => {\n    setLanguage(newLanguage);\n  };\n\n  const t = translations[language];\n\n  return (\n    <LanguageContext.Provider value={{ language, changeLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMW,cAAc,GAAIC,WAAW,IAAK;IACtCF,WAAW,CAACE,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMC,CAAC,GAAGX,YAAY,CAACO,QAAQ,CAAC;EAEhC,oBACEL,OAAA,CAACC,eAAe,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ;MAAEE,cAAc;MAAEE;IAAE,CAAE;IAAAN,QAAA,EAC9DA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACX,EAAA,CAdWF,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAgB7B,OAAO,MAAMe,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGtB,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACkB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}